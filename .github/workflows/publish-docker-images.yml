###########
# ENV VARS:
# - DOCKER_USERNAME
# - DOCKER_PASSWORD
# - GITHUB_TOKEN (default)
###########

name: Publish Docker Image

on:
  push:
    branches:
      - 'master'
    paths:
      - 'release-versions/*'
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:

      - name: Get current repository
        uses: actions/checkout@v4

      - name: Get the version
        id: vars
        run: echo ::set-output name=tag::$(cat release-versions/apostrophe-latest.txt)

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Clone apostrophe repo to local folder temporarily
      - name: Get remote apostrophe repository
        uses: actions/checkout@v4
        with:
          repository: apostrophecms/apostrophe
          ref: ${{steps.vars.outputs.tag}}
          path: apostrophe-source

      # Copy files to cloned repo
      - name: Copy Build files to source folder
        shell: bash
        run: |
          cp -r Dockerfile .dockerignore scripts apostrophe-source

      - name: Build
        uses: docker/build-push-action@v2
        with:
          context: apostrophe-source
          #build-args: |
          #  APOSTROPHE_VERSION=${{steps.vars.outputs.tag}}
          # platforms: linux/amd64,linux/arm64,linux/arm/v7
          push: true
          tags: |
            ${{ secrets.DOCKER_USERNAME }}/apostrophe:${{ steps.vars.outputs.tag }}
            ${{ secrets.DOCKER_USERNAME }}/apostrophe:latest

      #- name: Docker Hub Description (README.md)
      #  uses: peter-evans/dockerhub-description@v2
      #  with:
      #    username: ${{ secrets.DOCKER_USERNAME }}
      #    password: ${{ secrets.DOCKER_PASSWORD }}
      #    repository: ${{ secrets.DOCKER_USERNAME }}/apostrophe
      #    readme-filepath: README.md

      - name: Create Release in GitHub
        id: create_release
        uses: actions/create-release@v1
        continue-on-error: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: v${{steps.vars.outputs.tag}}
          release_name: Release ${{steps.vars.outputs.tag}}
          body: apostrophe v${{steps.vars.outputs.tag}}
